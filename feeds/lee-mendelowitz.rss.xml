<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Lee On Coding - Lee Mendelowitz</title><link>https://leemendelowitz.github.io/blog/</link><description></description><lastBuildDate>Fri, 16 Dec 2016 00:00:00 +0100</lastBuildDate><item><title>Finding files with GNU find!</title><link>https://leemendelowitz.github.io/blog/gnu-find.html</link><description>&lt;p&gt;How to use GNU find to find files.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lee Mendelowitz</dc:creator><pubDate>Fri, 16 Dec 2016 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:leemendelowitz.github.io,2016-12-16:/blog/gnu-find.html</guid><category>Linux</category></item><item><title>How does python find packages?</title><link>https://leemendelowitz.github.io/blog/how-does-python-find-packages.html</link><description>&lt;p&gt;Pure Magic!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lee Mendelowitz</dc:creator><pubDate>Wed, 04 Mar 2015 17:30:00 +0100</pubDate><guid isPermaLink="false">tag:leemendelowitz.github.io,2015-03-04:/blog/how-does-python-find-packages.html</guid><category>Python</category></item><item><title>Fix the pesky "^M" carriage return control character using tr</title><link>https://leemendelowitz.github.io/blog/remove-carriage-return-control-character.html</link><description>&lt;p&gt;How to fix the "^M" carriage return control character using tr&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lee Mendelowitz</dc:creator><pubDate>Wed, 04 Feb 2015 03:20:00 +0100</pubDate><guid isPermaLink="false">tag:leemendelowitz.github.io,2015-02-04:/blog/remove-carriage-return-control-character.html</guid></item><item><title>std::sort and std::bad_alloc</title><link>https://leemendelowitz.github.io/blog/sort-bad-alloc.html</link><description>&lt;p&gt;Painful reminder of why programming in C++ can be hard.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lee Mendelowitz</dc:creator><pubDate>Tue, 23 Dec 2014 22:02:00 +0100</pubDate><guid isPermaLink="false">tag:leemendelowitz.github.io,2014-12-23:/blog/sort-bad-alloc.html</guid><category>C++</category></item><item><title>Installing Numpy with OpenBlas</title><link>https://leemendelowitz.github.io/blog/installing-numpy-with-openblas.html</link><description>&lt;p&gt;How to install numpy with OpenBlas.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lee Mendelowitz</dc:creator><pubDate>Thu, 23 Oct 2014 09:20:00 +0200</pubDate><guid isPermaLink="false">tag:leemendelowitz.github.io,2014-10-23:/blog/installing-numpy-with-openblas.html</guid><category>python</category><category>numpy</category></item><item><title>Ubuntu Server Virtual Machine with SSH using VirtualBox on Mac OS X</title><link>https://leemendelowitz.github.io/blog/ubuntu-server-virtualbox.html</link><description>&lt;p&gt;How to set up an Ubuntu Server guest virtual machine on OS X in Virtual Box&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lee Mendelowitz</dc:creator><pubDate>Mon, 13 Oct 2014 12:00:00 +0200</pubDate><guid isPermaLink="false">tag:leemendelowitz.github.io,2014-10-13:/blog/ubuntu-server-virtualbox.html</guid><category>Ubuntu</category><category>VirtualBox</category></item><item><title>Decorating Python File Functions</title><link>https://leemendelowitz.github.io/blog/decorating-python-file-functions.html</link><description>&lt;p&gt;How to wrap a Python function which writes to a file.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lee Mendelowitz</dc:creator><pubDate>Wed, 30 Apr 2014 16:45:00 +0200</pubDate><guid isPermaLink="false">tag:leemendelowitz.github.io,2014-04-30:/blog/decorating-python-file-functions.html</guid><category>python</category></item><item><title>D3 Update Enter Exit Selections</title><link>https://leemendelowitz.github.io/blog/d3-update-enter-exit-selections.html</link><description>&lt;p&gt;A demo on D3's update, enter, and exit selections.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lee Mendelowitz</dc:creator><pubDate>Mon, 28 Apr 2014 12:00:00 +0200</pubDate><guid isPermaLink="false">tag:leemendelowitz.github.io,2014-04-28:/blog/d3-update-enter-exit-selections.html</guid><category>d3</category><category>javascript</category></item><item><title>Python OS X Mavericks Issues</title><link>https://leemendelowitz.github.io/blog/python-mavericks-issues.html</link><description>&lt;p&gt;Some issues I encountered with my Python installation after upgrading to OS X Mavericks.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lee Mendelowitz</dc:creator><pubDate>Sat, 29 Mar 2014 02:00:00 +0100</pubDate><guid isPermaLink="false">tag:leemendelowitz.github.io,2014-03-29:/blog/python-mavericks-issues.html</guid><category>python</category></item><item><title>Any and All</title><link>https://leemendelowitz.github.io/blog/any-all-in-python.html</link><description>&lt;p&gt;Demonstration of any/all in Python.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lee Mendelowitz</dc:creator><pubDate>Fri, 31 Jan 2014 12:42:00 +0100</pubDate><guid isPermaLink="false">tag:leemendelowitz.github.io,2014-01-31:/blog/any-all-in-python.html</guid><category>python</category></item><item><title>Mathematical expressions in plots</title><link>https://leemendelowitz.github.io/blog/mathematical-expressions-in-plots.html</link><description>&lt;p&gt;&lt;a href="https://leemendelowitz.github.io/blog/computing_for_data_analysis/rmarkdown/plotmath.rmd"&gt;Download as R Markdown&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Mathematical expressions can be included in the plot title or axis labels. For more information, see &lt;code&gt;?plotmath&lt;/code&gt; or run the demo with &lt;code&gt;demo(plotmath)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here are some quick examples.&lt;/p&gt;
&lt;h3&gt;Example 1&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; main &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;theta &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; ylab &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;hat&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;gamma&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
    xlab &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;sum …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lee Mendelowitz</dc:creator><pubDate>Tue, 15 Oct 2013 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:leemendelowitz.github.io,2013-10-15:/blog/mathematical-expressions-in-plots.html</guid><category>R</category><category>Computing For Data Analysis</category></item><item><title>Plotting with Lattice</title><link>https://leemendelowitz.github.io/blog/plotting-with-lattice.html</link><description>&lt;p&gt;&lt;a href="https://leemendelowitz.github.io/blog/computing_for_data_analysis/rmarkdown/lattice_demo.rmd"&gt;Download as R Markdown&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The lattice library is useful for quickly making plots of multivariate data. It's easy to make plots which condition on one or more variables.&lt;/p&gt;
&lt;h3&gt;Load the lattice library&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;lattice&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Ask for general information about the lattice package&lt;/span&gt;
&lt;span class="sb"&gt;`?`&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;package&lt;span class="p"&gt;,&lt;/span&gt; lattice&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# See what is inside of the …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lee Mendelowitz</dc:creator><pubDate>Mon, 14 Oct 2013 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:leemendelowitz.github.io,2013-10-14:/blog/plotting-with-lattice.html</guid><category>R</category><category>Computing For Data Analysis</category></item><item><title>mapply</title><link>https://leemendelowitz.github.io/blog/mapply.html</link><description>&lt;!--- mapply --&gt;

&lt;p&gt;&lt;a href="https://leemendelowitz.github.io/blog/computing_for_data_analysis/rmarkdown/mapply.rmd"&gt;Download as R Markdown&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mapply&lt;/code&gt; gives us a way to call a non-vectorized function in a vectorized way.&lt;/p&gt;
&lt;p&gt;From the R Documentation:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mapply is a multivariate version of sapply. mapply applies FUN to
the first elements of each ... argument, the second elements,
the third elements, and so on. Arguments are …&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lee Mendelowitz</dc:creator><pubDate>Sun, 13 Oct 2013 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:leemendelowitz.github.io,2013-10-13:/blog/mapply.html</guid><category>R</category><category>Computing For Data Analysis</category></item><item><title>R Base Graphics Plotting</title><link>https://leemendelowitz.github.io/blog/r-base-graphics-plotting.html</link><description>&lt;!--- R Base Graphics Plotting --&gt;

&lt;p&gt;&lt;a href="https://leemendelowitz.github.io/blog/computing_for_data_analysis/rmarkdown/basePlotting.rmd"&gt;Download as R Markdown&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Important parameters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;pch&lt;/strong&gt;: plotting symbol&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;lty&lt;/strong&gt;: line type&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;lwd&lt;/strong&gt;: line width&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;col&lt;/strong&gt;: plotting color&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;las&lt;/strong&gt;: orientation of axis labels &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;bg&lt;/strong&gt;: background color&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;mar&lt;/strong&gt;: margin size&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;oma&lt;/strong&gt;: outer margin size&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;mfrow&lt;/strong&gt;: number of plots per row, column. Plots filled in row-wise.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;mfcol&lt;/strong&gt;: number of plots per row …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lee Mendelowitz</dc:creator><pubDate>Sun, 13 Oct 2013 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:leemendelowitz.github.io,2013-10-13:/blog/r-base-graphics-plotting.html</guid><category>R</category><category>Computing For Data Analysis</category></item><item><title>tapply and split</title><link>https://leemendelowitz.github.io/blog/tapply-and-split.html</link><description>&lt;!--- tapply and split --&gt;

&lt;p&gt;&lt;a href="https://leemendelowitz.github.io/blog/computing_for_data_analysis/rmarkdown/tapply_and_split.rmd"&gt;Download as R Markdown&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;tapply&lt;/h2&gt;
&lt;p&gt;Apply a function over subsets of a vector.&lt;/p&gt;
&lt;h3&gt;Example: Take group means with tapply.&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; runif&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
x
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;##  [1] -2.04333  0.72651  1.55476 -0.12411  1.08133 -0.30514  1.38638
##  [8]  0.35047  0.88147  1 …&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lee Mendelowitz</dc:creator><pubDate>Sun, 13 Oct 2013 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:leemendelowitz.github.io,2013-10-13:/blog/tapply-and-split.html</guid><category>R</category><category>Computing For Data Analysis</category></item><item><title>Parsing in Python</title><link>https://leemendelowitz.github.io/blog/parsing-in-python.html</link><description>&lt;p&gt;How to parse in python&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lee Mendelowitz</dc:creator><pubDate>Thu, 03 Oct 2013 22:07:00 +0200</pubDate><guid isPermaLink="false">tag:leemendelowitz.github.io,2013-10-03:/blog/parsing-in-python.html</guid><category>python</category></item><item><title>Wrapping Python Dictionaries</title><link>https://leemendelowitz.github.io/blog/wrapping-python-dictionaries.html</link><description>&lt;p&gt;How to wrap a python dictionary for IPython autocompletion.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lee Mendelowitz</dc:creator><pubDate>Wed, 02 Oct 2013 17:45:00 +0200</pubDate><guid isPermaLink="false">tag:leemendelowitz.github.io,2013-10-02:/blog/wrapping-python-dictionaries.html</guid><category>python</category><category>ipython</category></item><item><title>Start Me Up!</title><link>https://leemendelowitz.github.io/blog/start-me-up.html</link><description>&lt;p&gt;My first post.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lee Mendelowitz</dc:creator><pubDate>Wed, 02 Oct 2013 07:35:00 +0200</pubDate><guid isPermaLink="false">tag:leemendelowitz.github.io,2013-10-02:/blog/start-me-up.html</guid></item></channel></rss>